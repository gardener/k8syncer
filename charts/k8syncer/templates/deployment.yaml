apiVersion: {{ include "deploymentversion" . }}
kind: Deployment
metadata:
  name: k8syncer
  namespace: {{ .Release.Namespace }}
  labels:
    app: k8syncer
    role: k8syncer
    chart-name: "{{ .Chart.Name }}"
    chart-version: "{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8syncer
      role: k8syncer
  template:
    metadata:
      annotations:
        checksum/kubeconfig: {{ include (print $.Template.BasePath "/secret-kubeconfig.yaml") . | sha256sum }}
        checksum/k8syncer-config: {{ include (print $.Template.BasePath "/secret-k8syncer-config.yaml") . | sha256sum }}
      labels:
        app: k8syncer
        role: k8syncer
        chart-name: "{{ .Chart.Name }}"
        chart-version: "{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
      - name: {{ . }}
      {{- end }}
      {{- end }}
      {{- if not (or .Values.config.kubeconfig .Values.config.cluster) }}
      serviceAccountName: k8syncer
      {{- end }}
      containers:
      - name: k8syncer
        image: "{{ include "image" .Values.image }}"
        imagePullPolicy: IfNotPresent
        command:
        - /k8syncer
        - --config=/etc/config/config.yaml
        {{- if or .Values.config.kubeconfig .Values.config.cluster }}
        - --kubeconfig=/etc/config
        {{- end }}
        {{- if .Values.logging }}
        {{- if .Values.logging.verbosity }}
        - -v={{ .Values.logging.verbosity }}
        {{- end }}
        {{- end }}
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu | default "100m" }}
            memory: {{ .Values.resources.requests.memory | default "256Mi" }}
          {{- if .Values.resources.limits }}
          limits:
          {{- .Values.resources.limits | toYaml | nindent 12 }}
          {{- end }}
      volumes:
      - name: config
        projected:
          sources:
          - secret:
              name: k8syncer-config
          {{- if or .Values.config.kubeconfig .Values.config.cluster }}
          {{- if .Values.config.kubeconfig }}
          - secret:
              name: k8syncer-target
          {{- else }}
          - secret:
              name: k8syncer-target
              items:
              - key: host
                path: host
              {{- if .Values.config.cluster.caData }}
              - key: caData
                path: ca.crt
              {{- end }}
          - serviceAccountToken:
              path: token
              expirationSeconds: 7200
              audience: {{ .Values.config.cluster.audience }}
          {{- if .Values.config.cluster.caConfigMapName }}
          - configMap:
              name: {{ .Values.config.cluster.caConfigMapName }}
              items:
              - key: ca.crt
                path: ca.crt
          {{- end }}
          {{- end }}
          {{- end }}
